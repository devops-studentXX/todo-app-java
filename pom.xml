<!--
 * Copyright IBM Corp. 2014
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">


  <modelVersion>4.0.0</modelVersion>
  <groupId>net.bluemix.todo</groupId>
  <artifactId>bluemix-todo-app</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>bluemix-todo-app</name>

  <!-- ====================================================================== -->
  <!-- B U I L D -->
  <!-- ====================================================================== -->
  <build>
    <defaultGoal>install</defaultGoal>
    <finalName>bluemix-todo-app</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <inherited>true</inherited>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${maven-antrun-plugin.version}</version>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <configuration>
              <tasks>
                <copy todir="${project.build.directory}/bluemix-todo-app">
                  <fileset dir="${project.basedir}../../../frontend"/>
                </copy>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.7.5.201505241946</version>
        <executions>
            <!-- The Executions required by unit tests are omitted. -->
            <!--
                Prepares the property pointing to the JaCoCo runtime agent which
                is passed as VM argument when Maven the Failsafe plugin is executed.
            -->
            <execution>
                <id>pre-integration-test</id>
                <phase>pre-integration-test</phase>
                <goals>
                    <goal>prepare-agent</goal>
                </goals>
                <configuration>
                    <!-- Sets the path to the file which contains the execution data. -->
                    <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                    <!--
                        Sets the name of the property containing the settings
                        for JaCoCo runtime agent.
                    -->
                    <propertyName>failsafeArgLine</propertyName>
                </configuration>
            </execution>
            <!--
                Ensures that the code coverage report for integration tests after
                integration tests have been run.
            -->
            <execution>
                <id>post-integration-test</id>
                <phase>post-integration-test</phase>
                <goals>
                    <goal>report</goal>
                </goals>
                <configuration>
                    <!-- Sets the path to the file which contains the execution data. -->
                    <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                    <!-- Sets the output directory for the code coverage report. -->
                    <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                </configuration>
            </execution>
        </executions>
      </plugin>
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.15</version>
          <configuration>
              <!-- Sets the VM argument line used when unit tests are run. -->
              <argLine>${surefireArgLine}</argLine>
              <!-- Skips unit tests if the value of skip.unit.tests property is true -->
              <skipTests>${skip.unit.tests}</skipTests>
              <!-- Excludes integration tests when unit tests are run. -->
              <excludes>
                  <exclude>**/IT*.java</exclude>
              </excludes>
          </configuration>
      </plugin>
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.15</version>
          <executions>
              <!--
                  Ensures that both integration-test and verify goals of the Failsafe Maven
                  plugin are executed.
              -->
              <execution>
                  <id>integration-tests</id>
                  <goals>
                      <goal>integration-test</goal>
                      <goal>verify</goal>
                  </goals>
                  <configuration>
                      <!-- Sets the VM argument line used when integration tests are run. -->
                      <argLine>${failsafeArgLine}</argLine>
                      <!--
                          Skips integration tests if the value of skip.integration.tests property
                          is true
                      -->
                      <skipTests>${skip.integration.tests}</skipTests>
                  </configuration>
              </execution>
          </executions>
      </plugin>
    </plugins>
  </build>

  <!-- ====================================================================== -->
  <!-- D E P E N D E N C Y   M A N A G E M E N T -->
  <!-- ====================================================================== -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.glassfish.jersey</groupId>
        <artifactId>jersey-bom</artifactId>
        <version>${jersey.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mongodb</groupId>
        <artifactId>mongo-java-driver</artifactId>
        <version>${mongo-java-driver.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.easymock</groupId>
        <artifactId>easymock</artifactId>
        <version>${easymock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-api-easymock</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-core</artifactId>
        <version>${spring-cloud.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-cloudfoundry-connector</artifactId>
        <version>${spring-cloud.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- ====================================================================== -->
  <!-- D E P E N D E N C I E S -->
  <!-- ====================================================================== -->
  <dependencies>
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet-core</artifactId>
      <!-- use the following artifactId if you don't need servlet 2.x compatibility -->
      <!-- artifactId>jersey-container-servlet</artifactId -->
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-moxy</artifactId>
      </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongo-java-driver</artifactId>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-easymock</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-cloudfoundry-connector</artifactId>
    </dependency>
  </dependencies>

  <!-- ====================================================================== -->
  <!-- P R O F I L E S -->
  <!-- ====================================================================== -->
  <profiles>
    <!-- profile to run an embedded jetty instance -->
    <profile>
      <id>run</id>
      <dependencies>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>${maven-antrun-plugin.version}</version>
            <executions>
              <execution>
                <id>create-work</id>
                <phase>compile</phase>
                <configuration>
                  <target>
                    <mkdir dir="target" />
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>maven-jetty-plugin</artifactId>
            <version>${maven-jetty-plugin.version}</version>
            <configuration>
              <reload>manual</reload>
              <tempDirectory>${basedir}/target/work</tempDirectory>
              <webApp>${basedir}/target/bluemix-todo-app.war</webApp>
              <contextPath>/</contextPath>
            </configuration>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>run-war</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>mongo-deploy</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.cloudfoundry</groupId>
            <artifactId>cf-maven-plugin</artifactId>
            <version>${cf-maven-plugin.version}</version>
            <configuration>
              <server>Bluemix</server>
              <target>https://api.eu-gb.bluemix.net</target>
              <appname>bluemix-todo-java-mongo</appname>
              <url>${app-url}</url>
              <org>${org}</org>
              <space>${space}</space>
              <buildpack>https://github.com/cloudfoundry/java-buildpack.git</buildpack>
              <services>
                <service>
                  <name>todo-mongo-db</name>
                  <label>compose-for-mongodb</label>
                  <plan>Standard</plan>
                </service>
              </services>
            </configuration>
            <executions>
              <execution>
                <phase>install</phase>
                <goals>
                  <goal>push</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>cloudant-deploy</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.cloudfoundry</groupId>
            <artifactId>cf-maven-plugin</artifactId>
            <version>${cf-maven-plugin.version}</version>
            <configuration>
              <server>Bluemix</server>
              <target>https://api.ng.bluemix.net</target>
              <appname>bluemix-todo-java-cloudant</appname>
              <url>${app-url}</url>
              <org>${org}</org>
              <space>${space}</space>
              <buildpack>https://github.com/cloudfoundry/java-buildpack.git</buildpack>
              <services>
                <service>
                  <name>todo-couch-db</name>
                  <label>cloudantNoSQLDB</label>
                  <plan>Lite</plan>
                </service>
              </services>
            </configuration>
            <executions>
              <execution>
                <phase>install</phase>
                <goals>
                  <goal>push</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <!-- ====================================================================== -->
  <!-- R E P O S I T O R I E S -->
  <!-- ====================================================================== -->
  <repositories>
    <repository>
      <id>org.springframework.maven.milestone</id>
      <name>Spring Framework Maven Milestone Repository</name>
      <url>http://maven.springframework.org/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
    </repository>
  </repositories>

  <!-- ====================================================================== -->
  <!-- P R O P E R T I E S -->
  <!-- ====================================================================== -->
  <properties>
    <jersey.version>2.24</jersey.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <powermock.version>1.6.6</powermock.version>
    <easymock.version>3.4</easymock.version>
    <cf.version>0.8.1</cf.version>
    <maven-jetty-plugin.version>6.1.26</maven-jetty-plugin.version>
    <maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>
    <maven-compiler-plugin.version>3.6.0</maven-compiler-plugin.version>
    <cf-maven-plugin.version>1.1.3</cf-maven-plugin.version>
    <junit.version>4.8.1</junit.version>
    <mongo-java-driver.version>2.11.0</mongo-java-driver.version>
    <maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
    <spring-cloud.version>1.0.0.RELEASE</spring-cloud.version>
    <space>dev</space>
  </properties>
</project>
